{"version":3,"sources":["Editor.js","App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","onCLick","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","App","html","setHtml","css","setCss","js","setJs","srcs","setSrcs","useEffect","timeout","setTimeout","clearTimeout","srcDoc","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAQe,SAASA,EAAOC,GAAQ,IAE/BC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAL8B,EAYZC,oBAAS,GAZG,mBAY5BC,EAZ4B,KAYvBC,EAZuB,KAclC,OACI,sBAAKC,UAAS,0BAAqBF,EAAM,GAAG,aAA5C,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,yBAAQO,QAAS,kBAAKF,GAASD,IAA/B,cAAuC,cAAC,IAAD,IAAvC,UAEJ,cAAC,aAAD,CACII,eAbS,SAACC,EAAOC,EAAKT,GAC9BC,EAASD,IAaDA,MAASA,EACTK,UAAU,qBACVK,QAAS,CACLC,cAAa,EACbC,MAAK,EACLC,KAAKf,EACLgB,aAAY,EACZC,MAAM,iBCuBXC,MAxDf,WAAgB,IAAD,EACUd,mBAAS,IADnB,mBACNe,EADM,KACDC,EADC,OAEQhB,mBAAS,IAFjB,mBAENiB,EAFM,KAEFC,EAFE,OAGMlB,mBAAS,IAHf,mBAGNmB,EAHM,KAGHC,EAHG,OAISpB,mBAAS,IAJlB,mBAIPqB,EAJO,KAIFC,EAJE,KAkBb,OAZAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAQ,qCAAD,OAEKP,EAFL,qCAGME,EAHN,uCAIOE,EAJP,2CAOP,KACF,OAAO,kBAAKO,aAAaF,MACzB,CAACT,EAAKE,EAAIE,IAEV,qCACI,sBAAKhB,UAAU,gBAAf,UACE,cAACT,EAAD,CACAE,SAAS,MACTC,YAAY,OACZC,MAAOiB,EACPhB,SAAUiB,IAEV,cAACtB,EAAD,CACEE,SAAS,MACTC,YAAY,MACZC,MAAOmB,EACPlB,SAAUmB,IAEZ,cAACxB,EAAD,CACEE,SAAS,aACTC,YAAY,KACZC,MAAOqB,EACPpB,SAAUqB,OAGd,qBAAKjB,UAAU,OAAf,SACI,wBACEwB,OAAUN,EACVO,MAAM,SACNC,QAAQ,gBACRC,YAAc,IACdC,MAAM,OACNC,OAAO,e,MC9CrBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4965f432.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport { AiOutlineArrowsAlt } from \"react-icons/ai\";\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport  'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2'  \r\nexport default function Editor(props) {\r\n    const{\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props;\r\n\r\n    const handleChange = (editor,data,value)=>{\r\n        onChange(value)\r\n    }\r\n\r\n    const[open,setOpen] = useState(true)\r\n\r\n    return (\r\n        <div className={`editor-container${open? '':'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button onCLick={()=> setOpen(!open)}> <AiOutlineArrowsAlt /> </button>\r\n            </div>\r\n            <ControlledEditor \r\n                onBeforeChange = {handleChange}\r\n                value = {value}\r\n                className=\"codemirror-wrapper\"\r\n                options={{\r\n                    lineWrapping:true,\r\n                    lint:true,\r\n                    mode:language,\r\n                    lineNumbers:true,\r\n                    theme:\"material\"\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { useState,useEffect } from 'react';\nimport './App.css';\nimport Editor from './Editor'\n\nfunction App() {\n  const [html,setHtml] = useState('')\n  const [css,setCss] = useState('')\n  const [js,setJs] = useState('')\n  const[srcs,setSrcs] = useState('')\n\n  useEffect(()=>{\n    const timeout = setTimeout(()=>{\n      setSrcs(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html?>\n      `)\n    },200)\n    return ()=> clearTimeout(timeout);\n  },[html,css,js])\n  return (\n    <>\n        <div className=\"pane top-pane\">\n          <Editor \n          language=\"xml\" \n          displayName=\"HTML\" \n          value={html} \n          onChange={setHtml} \n          />\n          <Editor \n            language=\"css\" \n            displayName=\"CSS\" \n            value={css} \n            onChange={setCss}\n          />\n          <Editor \n            language=\"javascript\" \n            displayName=\"JS\" \n            value={js} \n            onChange={setJs}\n          />\n        </div>\n        <div className=\"pane\">\n            <iframe\n              srcDoc = {srcs} \n              title=\"output\"\n              sandbox=\"allow-scripts\"\n              frameBorder = \"0\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n        </div>\n\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}